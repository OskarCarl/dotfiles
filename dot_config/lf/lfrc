############################################################################
# Configuration
############################################################################

set shell /usr/bin/zsh
set shellopts '-eu'
set ifs "\n"

set icons
set tabstop 4
set period 10 # force refresh every x seconds
set scrolloff 10

set incsearch

# AUR package seems to be insufficiently isolated during build
set previewer /usr/bin/pistol


############################################################################
# Unmapping
############################################################################

map c
map d
map y


############################################################################
# Common tools
############################################################################

map S $fish
map <enter> shell
map <backspace2> set hidden!

map i $/usr/bin/pistol $f | nvimpager

# dedicated keys for file opener actions
map o $[[ ! -d $f ]] && kde-open $f || exit 0
map O &alacritty -e /usr/bin/lf $f

cmd open-with &"$@" $fx
map ` push :open-with<space>

# enable history browsing
cmap <up>	cmd-history-prev
cmap <down> cmd-history-next


############################################################################
# Movement
############################################################################

map J half-down
map K half-up

map cd push :cd<space>

map gr cd /
map gm cd /media/


############################################################################
# File operations
############################################################################

# execute current file (must be executable)
map x $$f
map X !$f

# copying similar to ranger
map dd cut
map yy copy
map yp copy-path
map yc copy-clipboard
map cc clear

cmd copy-path &printf '%s' "$fx" | wl-copy
cmd copy-clipboard &wl-copy -t "$(mimetype -b -L $f)" <$f

# define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map r push :rename<space>

map a ${{
	# get 'basename' of the selection
	filename="${f##*/}"
	# quote it so we won't deal with quotes in the lf -remote command
	filename="$(printf '%q' "$filename")"
	filename="${filename// /<space>}"
	lf -remote "send $id push :rename<space>$filename"
}}

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
map D
map dD delete
map <delete> delete

# y (select for copy) and P to paste soft-link
# d (select for cut) and P to paste hard-link
cmd link %{{
	set -- $(cat ~/.local/share/lf/files)
	mode="$1"
	shift
	if [ "$#" -eq 0 ]; then
		lf -remote "send $id echo no files to link"
		exit 0
	fi
	case "$mode" in
		# symbolically copy mode is indicating a soft link
		copy) 
			ln -sr -t . -- "$@";;
		# while a move mode is indicating a hard link
		move) ln -t . -- "$@";;
	esac
}}
map P :link

############################################################################
# Special tools
############################################################################

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
	set -f
	case $f in
		*.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
		*.tar.gz|*.tgz) tar xzvf $f;;
		*.tar.xz|*.txz) tar xJvf $f;;
		*.zip) unar $f;;
		*.rar) unrar x $f;;
		*.7z) 7z x $f;;
	esac
}}

# compress current file or selected files with tar and gzip
cmd tar ${{
	set -f
	mkdir $1
	cp -r $fx $1
	tar czf $1.tar.gz $1
	rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}

# open lazygit for the current repo if there is any in the path above
cmd lazygit $/home/oskar/.local/bin/lg $f
map L lazygit

# set the current directory path in the title
cmd on-cd &{{
    printf "\033]0; [lf] ${PWD/#$HOME/\~}\007" > /dev/tty
	fmt="$(STARSHIP_SHELL= starship prompt | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id set promptfmt \"$fmt\""
}}
# also run at startup
on-cd

# dynamically set the number of columns
cmd on-init :{{
    cmd on-redraw %{{
        if [ "$lf_width" -le 80 ]; then
            lf -remote "send $id set ratios 1:2"
        elif [ "$lf_width" -le 160 ]; then
            lf -remote "send $id set ratios 1:2:3"
        else
            lf -remote "send $id set ratios 1:2:3:5"
        fi
    }}

    on-redraw
}}
